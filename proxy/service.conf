# The following mapping block declares a relationship between the
# public port the nginx-le container listens on (incoming request port)
# and the service name as given in the docker-compose.yml for your service container.
map $server_port $internal_hostname {
    "443" "app";
    default "localhost";
}

# The following mapping block declares a relationship between the
# public port the nginx-le container listens on (incoming request port)
# and the service internal port as given in the docker-compose.yml for your service container.
map $server_port $internal_port {
    "443" "8080";
    default "$server_port";
}

server {
    server_name www.esmcdn.com types.esmcdn.com;

    # must specify docker DNS as a resolver when use variables for proxy_pass
    resolver 127.0.0.11 ipv6=off;

    # list all publically available ports
    listen 80;
    listen 443;

    ssl                     on;
    ssl_certificate         SSL_CERT;
    ssl_certificate_key     SSL_KEY;
    ssl_trusted_certificate SSL_CHAIN_CERT;

    location / {
        proxy_set_header        Host $http_host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        set $should_add_types 0;
        if ($host = "types.esmcdn.com") {
            set $should_add_types 1;
        }
        # don't add ?types if already present
        if ($args ~ '(&|^)types([&=]|$)') {
            set $should_add_types 0;
        }

        set $delimiter "";
        if ($is_args) {
            set $delimiter "&";
        }

        if ($should_add_types = 1) {
            set $args $args${delimiter}types;
        }

        # use the mapped hostname and port for a proxy target
        proxy_pass              "http://$internal_hostname:$internal_port$uri$is_args$args";
    }
}
